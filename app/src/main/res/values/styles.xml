<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
    </style>

    <style name="AppTheme.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />

    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />

    <declare-styleable name="MaterialEditText">

        <!-- The base color of the line and the texts. Default is black. -->


        <attr name="met_baseColor" format="color" />

        <!-- The highlight color of the line, and the floating label if the highlightFloatingLabel is true. -->


        <attr name="met_primaryColor" format="color" />

        <!-- How the floating label should be shown. Default is none -->


        -
        <attr name="met_floatingLabel">

            <enum name="none" value="0" />

            <enum name="normal" value="1" />

            <enum name="highlight" value="2" />

        </attr>

        <!-- The color for when something is wrong.(e.g. exceeding max characters) -->


        <attr name="met_errorColor" format="color" />

        <!-- Min characters count limit. 0 means no limit. -->


        <attr name="met_minCharacters" format="integer" />

        <!-- max Characters count limit. 0 means no limit. -->


        <attr name="met_maxCharacters" format="integer" />

        <!-- Whether to show the bottom ellipsis in singleLine mode -->


        <attr name="met_singleLineEllipsis" format="boolean" />

        <!-- Reserved bottom text lines count, no matter if there is some helper/error text. -->


        <attr name="met_minBottomTextLines" format="integer" />

        <!-- Helper text at the bottom -->


        <attr name="met_helperText" format="string" />

        <!-- Helper text color -->


        <attr name="met_helperTextColor" format="color" />

        <!-- Font of the paint used to draw accent texts -->


        <attr name="met_accentTypeface" format="string" />

        <!-- Font used on view -->


        <attr name="met_typeface" format="string" />

        <!-- Custom float label text -->


        <attr name="met_floatingLabelText" format="string" />

        <!-- spacing between the main text and the floating label -->


        <attr name="met_floatingLabelPadding" format="dimension" />

        <!-- Hide underline -->


        <attr name="met_hideUnderline" format="boolean" />

        <!-- Underline's color -->


        <attr name="met_underlineColor" format="color" />

        <!-- Auto validate -->


        <attr name="met_autoValidate" format="boolean" />

        <!-- Left icon -->


        <attr name="met_iconLeft" format="reference" />

        <!-- Right icon -->


        <attr name="met_iconRight" format="reference" />

        <!-- Padding between icon(s) and the main area. 8dp by default. -->


        <attr name="met_iconPadding" format="dimension" />

        <!-- Clear button -->


        <attr name="met_clearButton" format="boolean" />

        <!-- The floating label's text size. 12sp by default. -->


        <attr name="met_floatingLabelTextSize" format="dimension" />

        <!-- The floating label's text color. -1 by default. -->


        <attr name="met_floatingLabelTextColor" format="color" />

        <!-- The bottom texts' size. 12sp by default. -->


        <attr name="met_bottomTextSize" format="dimension" />

        <!-- Always show the floating label, instead of animating it in/out. False by default. -->


        <attr name="met_floatingLabelAlwaysShown" format="boolean" />

        <!-- Always show the helper text, no matter if the edit text is focused. False by default. -->


        <attr name="met_helperTextAlwaysShown" format="boolean" />

        <!-- Whether use animation to show/hide the floating label. True by default. -->


        <attr name="met_floatingLabelAnimating" format="boolean" />

        <!-- Text color -->


        <attr name="met_textColor" format="color" />

        <!-- Hint Text Color -->


        <attr name="met_textColorHint" format="color" />

        <!-- Auto validate on focus lost. False by default. -->


        <attr name="met_validateOnFocusLost" format="boolean" />

        <!-- Whether check the characters count at the beginning it's shown. True by default. -->


        <attr name="met_checkCharactersCountAtBeginning" format="boolean" />

    </declare-styleable>

    <style name="TextLabel" parent="TextAppearance.Design.Hint">
        <item name="android:textSize">8sp</item>
    </style>

    <style name="TextInputLayout">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:theme">@style/TextInputLayoutColorLine</item>
    </style>

    <style name="TextInputLayoutv2" parent="TextInputLayout">
        <item name="defaultTextColorLabel">#0000FF</item>
        <item name="focusedTextColorLabel">#0000FF</item>
        <item name="disabledTextColorLabel">#AAAAAA</item>
    </style>

    <style name="TextInputLayoutColorLine" parent="Theme.Design.Light"> <!-- stackoverflow.com/questions/35767158/ -->
        <item name="android:textColorHint">#8AFF0000</item>

        <item name="colorControlNormal">#0000FF</item>
        <item name="colorControlActivated">#00FF00</item>
        <item name="colorControlHighlight">#FF00FF</item>
    </style>

    <style name="EditText" parent="Widget.AppCompat.EditText">
        <item name="android:textColor">@drawable/color_state_topads_disable_text</item>
    </style>

    <style name="TextAppearance.Design.Tab" parent="TextAppearance.AppCompat.Button">
        <item name="android:textSize">@dimen/design_tab_text_size</item>
        <item name="android:textColor">?android:textColorSecondary</item>
        <item name="textAllCaps">true</item>
    </style>

    <style name="helperTextAppearance" parent="TextAppearance.Design.Error">
        <item name="android:textColor">#000000</item>
    </style>

    <style name="successTextAppearance" parent="TextAppearance.Design.Error">
        <item name="android:textColor">#00FF00</item>
    </style>

    <!--<style name="TkpdHint">-->
        <!--<item name="defaultTextColorHint">#0000FF</item>-->
        <!--<item name="focusedTextColorHint">#0000FF</item>-->
        <!--<item name="disabledTextColorHint">#AAAAAA</item>-->
    <!--</style>-->

</resources>
