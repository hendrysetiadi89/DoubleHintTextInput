<?xml version="1.0" encoding="utf-8"?>
<resources>
    <declare-styleable name="TextInputLayoutv2">
        <!-- will override android:textColorHint -->
        <attr name="defaultTextColorLabel" format="reference|color" />
        <attr name="focusedTextColorLabel" format="reference|color" />
        <attr name="disabledTextColorLabel" format="reference|color" />

        <!-- Whether the layout is laid out as if an error will be displayed. -->
        <attr name="hintEnabled" format="boolean"/>

        <!-- Whether the layout's floating label functionality is enabled. -->
        <attr name="android:hint"/>
        <!-- Whether to animate hint state changes. -->
        <attr name="hintAnimationEnabled" format="boolean"/>
        <!--  android:textColorHint -->
        <attr name="android:textColorHint"/>
        <!-- The hint to display in the floating label. -->
        <attr name="hintTextAppearance" format="reference"/>

        <attr name="errorEnabled" format="boolean"/>
        <!-- TextAppearance of any error message displayed. -->
        <attr name="errorTextAppearance" format="reference"/>

        <attr name="helperEnabled" format="boolean"/>
        <attr name="helperTextAppearance" format="reference"/>
        <!-- Text to set as helper string -->
        <attr name="helper" format="string"/>

        <attr name="successEnabled" format="boolean"/>
        <attr name="successTextAppearance" format="reference"/>

        <!-- Whether the layout is laid out as if the character counter will be displayed. -->
        <attr name="counterEnabled" format="boolean"/>
        <!-- The max length to display in the character counter. -->
        <attr name="counterMaxLength" format="integer" />
        <!-- TextAppearance of the character counter. -->
        <attr name="counterTextAppearance" format="reference"/>
        <!-- TextAppearance of the character counter when the text is longer than the max. -->
        <attr name="counterOverflowTextAppearance" format="reference"/>


        <!-- Whether the view will display a toggle when the EditText has a password. -->
        <attr name="passwordToggleEnabled" format="boolean"/>
        <!-- Drawable to use as the password input visibility toggle icon. -->
        <attr name="passwordToggleDrawable" format="reference"/>
        <!-- Text to set as the content description for the password input visibility toggle. -->
        <attr name="passwordToggleContentDescription" format="string"/>
        <!-- Icon to use for the password input visibility toggle -->
        <attr name="passwordToggleTint" format="color"/>

    </declare-styleable>

</resources>